const e=/\r?\n/,t=e=>(e.match(/\t/g)||[]).length,n={depth:0,hideFiles:!1,hideDots:!1},r=["dockerfile","vagrantfile","jenkinsfile","makefile","license","changelog","authors"].reduce(((e,t)=>(e[t]=!0,e)),{}),o=e=>{if("string"!=typeof e)throw new Error("fileName must be a string");return void 0!==r[e.toLowerCase()]},i=({tree:e,tabChar:t="  ",options:r=n})=>{let i="";const l=(e,n)=>{e.forEach(((c,a)=>{if(r.hideDots&&(c.name.startsWith(".")||o(c.name)))return;if(r.hideFiles&&0===c.children.length&&(c.name.includes(".")||o(c.name)))return;if(r.depth>0&&n.length+1>r.depth)return;const s=a===e.length-1,h=((e,t,n="  ")=>{let r="";return e.forEach((e=>r=r.concat(e?n:`│${n}`))),t?r+"└── ":r+"├── "})(n,s,t),x=h+c.name+"\n";i=i.concat(x);const u=[...n,s];l(c.children,u)}))};return l(e,[]),i=i.replace(/\n$/,""),i};"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}));const l=n=>{const r=[];let o=r;const i=[];let l="";const c=(t=>{const n=t.split(e),r=/│?(.+)(├──|└──)/,o=n.find((e=>e.match(r))),i=null==o?void 0:o.match(r);return(null==i?void 0:i[1])||null})(n);if(!c)return console.error("Unable to parse tab character"),[];return n.replace(new RegExp(c,"g"),"\t").split(e).forEach(((e,n)=>{if(!e.match(/^(\t+)?(│|├──|└──|\t)+.+/))return;const c=l.split(" ")[0],a=t(c),s=e.split(" ")[0],h=t(s),x=e.substring(s.length).trim();Array(h<=a?a-h+1:0).fill("pop").forEach((()=>i.pop()));const u={_index:n,name:x,children:[]};o=i.length>0?i[i.length-1].children:r,o.push(u),i.push(u),l=e})),r};export{i as treeJsonToString,l as treeStringToJson};
