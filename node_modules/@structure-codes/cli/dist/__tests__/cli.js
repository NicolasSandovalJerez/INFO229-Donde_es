"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cli = void 0;
const child_process_1 = require("child_process");
const utils_1 = require("../utils/utils");
const fs_1 = __importDefault(require("fs"));
const cli = (args) => {
    // Validate config path exists and a config file is there
    // You must have a valid config file before runnning tests!
    // If you don't have one, run the CLI to generate it
    const configPath = (0, utils_1.getConfigPath)();
    if (!configPath)
        throw new Error("Could not find config path");
    try {
        fs_1.default.readFileSync(configPath);
    }
    catch (err) {
        throw new Error(err.message + "\nBefore running tests you must have a valid .treerc file - try running the cli first");
    }
    try {
        const result = (0, child_process_1.execSync)(`ts-node src/index ${args.join(" ")}`);
        return result.toString();
    }
    catch (err) {
        console.error(err);
        return err.message;
    }
};
exports.cli = cli;
//# sourceMappingURL=cli.js.map