"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validatePath = exports.pathExists = exports.getConfigPath = void 0;
const fs_1 = __importDefault(require("fs"));
const getConfigPath = () => {
    const { HOME, USERPROFILE } = process.env;
    const homeDir = process.platform === "win32" ? USERPROFILE : HOME;
    if (!homeDir) {
        console.error("Unable to determine user's home directory. Checked env for HOME and USERPROFILE");
        return null;
    }
    const configFilename = ".treerc";
    const configPath = `${homeDir}/${configFilename}`;
    return configPath;
};
exports.getConfigPath = getConfigPath;
const pathExists = (filepath) => {
    try {
        fs_1.default.accessSync(filepath);
        return true;
    }
    catch (_a) {
        return false;
    }
};
exports.pathExists = pathExists;
const validatePath = (path, pathType) => {
    if (!(0, exports.pathExists)(path))
        return false;
    const lstat = fs_1.default.lstatSync(path);
    const isFile = lstat.isFile();
    if (pathType === "file" && !isFile) {
        console.error("Expected a file but got a directory:", path);
        return false;
    }
    else if (pathType === "dir" && isFile) {
        console.error("Expected a directory but got a file:", path);
        return false;
    }
    else {
        return true;
    }
};
exports.validatePath = validatePath;
//# sourceMappingURL=utils.js.map